scRNA-seq of the Mouse Olfactory system
        Notebook Author: Matt Chang
        In collaboration with the Yu Lab
        Co-Authors: Chris Chua, Alyx Gray

Project Description:

        This project aims to describe the process of olfactory map formation in Mus musculus. 
        Early-born neurons termed "Navigator Neurons" by Wu et al. in 2018 are thought to play a crucial role in the formation of this map. 
        These navigator neurons are present during the "critical period" (previously described as E21 - P7 in mice by Wu et al. 2018). 
        After this critical period, olfactory sensory neurons lose the ability to re-map to different glomeruli. 
        Our data is from P10 (3 days after the critical period) with the goal of identifying and characterizing the status of mature olfactory sensory neurons at this time point in comparison to previously described timepoints (P0, P3, P7, P14, and P21).
        We characterize this data using Cellranger software (mkfastq and counts) alongside Seurat software. 

10/16/20

FastQ files are Phred 33 encoded

Converted file names to counts format (SAMPLENAME__S1_L001_R1_001.fastq.gz) (and R2 for read2)

CellRanger Counts Command:
bin/cellranger count --id CountsTest -f /projects/bgmp/shared/groups/2020/neuron_nerds/THE_DATA -s P10 --transcriptome MOUSEREF_refdata-gex-mm10-2020-A.tar.gz

Error:  Your reference does not contain the expected files, or they are not readable. Please check your reference folder on n225.

Need to check reference file - did I get the right one?

Command to get mouse ref genome: wget https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-mm10-2020-A.tar.gz

Decompress ref genome: tar -zxvf refdata-gex-mm10-2020-A.tar.gz

Start Run: 9:53 AM on interactive node N225
bin/cellranger count --id CountsTest -f /projects/bgmp/shared/groups/2020/neuron_nerds/THE_DATA -s P10 --transcriptome refdata-gex-mm10-2020-A

Appears to have run out of memory: 2020-10-16 09:53:52 [jobmngr] Job asked for 20480 MB but is being given 3 GB.

Running on a slurm script 10:03 AM:

                #!/bin/bash
                #SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
                #SBATCH --cpus-per-task=1       ### Number of tasks to be launched
                #SBATCH --account=bgmp          ### Account used for job submission
                #SBATCH --mem=22G

                /usr/bin/time -v bin/cellranger count --id CountsTest -f /projects/bgmp/shared/groups/2020/neuron_nerds/THE_DATA -s P10 --transcriptome refdata-gex-mm10-2020-A

Software Versions:
                cellranger-4.0.0
                Martian Runtime - v4.0.0
                Serving UI at http://n225:44425?auth=BxRdAHBMeZS281MK-_kddMlOBEGbjY3ZQEuj6K4KXEE
                mrc: v4.0.0
                mrp: v4.0.0
                Anaconda: Python 2.7.15 :: Anaconda, Inc.
                numpy: 1.14.2
                scipy: 1.0.1
                pysam: 0.14.1
                h5py: 2.8.0
                pandas: 0.22.0
                STAR: STAR_2.5.1b
                samtools: samtools 1.7

Need to remove the last nucleotide from Read 1 (per Max Hills email)
Unix Command: zcat P10_S1_L001_R1_001.fastq.gz | sed '2~4s/[ATCGN]$//' | sed '4~4s/[!-J]$//' > P10Trimmed_S1_L001_R1_001.fastq 
Re-zip file, re-name Read 2 P10Trimmed_S1_L001_R2_001.fastq.gz to re-run CellRanger


10/25/20:
Created an example Seurat R script based on the vignette available here: https://satijalab.org/seurat/v3.2/pbmc3k_tutorial.html

            install.packages("Seurat", "patchwork", "dplyr")


            library(dplyr)
            library(Seurat)
            library(patchwork)

            # Load the PBMC dataset
            P10.data <- Read10X(data.dir = "/projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/cellranger-4.0.0/CountsTest/outs/raw_feature_bc_matrix/")
            # Initialize the Seurat object with the raw (non-normalized data).
            P10 <- CreateSeuratObject(counts = P10.data, project = "P10", min.cells = 3, min.features = 200)

            dense.size <- object.size(as.matrix(P10.data))
            dense.size

            P10[["percent.mt"]] <- PercentageFeatureSet(P10, pattern = "^MT-")

            VlnPlot(P10, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

            plot1 <- FeatureScatter(P10, feature1 = "nCount_RNA", feature2 = "percent.mt")
            plot2 <- FeatureScatter(P10, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
            plot1 + plot2

            P10 <- subset(P10, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)

            P10 <- NormalizeData(P10, normalization.method = "LogNormalize", scale.factor = 10000)

            P10 <- FindVariableFeatures(P10, selection.method = "vst", nfeatures = 2000)

            # Identify the 10 most highly variable genes
            top10 <- head(VariableFeatures(P10), 10)

            # plot variable features with and without labels
            plot1 <- VariableFeaturePlot(P10)
            plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
            plot1 + plot2

            all.genes <- rownames(P10)
            P10 <- ScaleData(P10, features = all.genes)

            P10 <- RunPCA(P10, features = VariableFeatures(object = P10))

            print(P10[["pca"]], dims = 1:5, nfeatures = 5)

            VizDimLoadings(P10, dims = 1:2, reduction = "pca")

            DimPlot(P10, reduction = "pca")

            DimHeatmap(P10, dims = 1, cells = 500, balanced = TRUE)

            DimHeatmap(P10, dims = 1:15, cells = 500, balanced = TRUE)

            P10 <- JackStraw(P10, num.replicate = 100)
            P10 <- ScoreJackStraw(P10, dims = 1:20)

            JackStrawPlot(P10, dims = 1:15)

            ElbowPlot(P10)

            P10 <- FindNeighbors(P10, dims = 1:10)
            P10 <- FindClusters(P10, resolution = 0.5)

            head(Idents(P10), 5)

            py_install(packages ='umap-learn')

            P10 <- RunUMAP(P10, dims = 1:10)

            DimPlot(P10, reduction = "umap")

            saveRDS(P10, file = "/projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/P10_tutorial.rds")

            cluster1.markers <- FindMarkers(P10, ident.1 = 1, min.pct = 0.25)
            head(cluster1.markers, n = 5)

            cluster5.markers <- FindMarkers(P10, ident.1 = 5, ident.2 = c(0, 3), min.pct = 0.25)
            head(cluster5.markers, n = 5)

            P10.markers <- FindAllMarkers(P10, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
            P10.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_logFC)

            cluster1.markers <- FindMarkers(P10, ident.1 = 0, logfc.threshold = 0.25, test.use = "roc", only.pos = TRUE)

            top10 <- P10.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_logFC)
            DoHeatmap(P10, features = top10$gene) + NoLegend()


Uploaded to Talapas

ENVIRONMENT TO RUN SEURAT SCRIPT IN:

name: bgmp_py37
channels:
  - bioconda/label/cf201901
  - anaconda
  - conda-forge
  - bioconda
  - defaults
dependencies:
  - _libgcc_mutex=0.1=main
  - blas=1.0=mkl
  - bzip2=1.0.8=h7b6447c_0
  - ca-certificates=2020.11.8=ha878542_0
  - certifi=2020.11.8=py37h89c1867_0
  - curl=7.61.0=h84994c4_0
  - cycler=0.10.0=py37_0
  - dbus=1.13.12=h746ee38_0
  - expat=2.2.9=he6710b0_2
  - fontconfig=2.13.0=h9420a91_0
  - freetype=2.10.2=h5ab3b9f_0
  - glib=2.56.2=hd408876_0
  - gst-plugins-base=1.14.0=hbbd80ab_1
  - gstreamer=1.14.0=hb453b48_1
  - htslib=1.9=h4da6232_3
  - icu=58.2=he6710b0_3
  - intel-openmp=2020.1=217
  - joblib=0.17.0=py_0
  - jpeg=9b=habf39ab_1
  - kiwisolver=1.2.0=py37hfd86e86_0
  - ld_impl_linux-64=2.33.1=h53a641e_7
  - libcurl=7.61.0=h1ad7b7a_0
  - libdeflate=1.2=h516909a_1
  - libedit=3.1.20181209=hc058e9b_0
  - libffi=3.2.1=hd88cf55_4
  - libgcc=7.2.0=h69d50b8_2
  - libgcc-ng=9.1.0=hdf63c60_0
  - libgfortran-ng=7.3.0=hdf63c60_0
  - libllvm10=10.0.1=he513fc3_3
  - libpng=1.6.37=hbc83047_0
  - libssh2=1.8.0=h9cfc8f7_4
  - libstdcxx-ng=9.1.0=hdf63c60_0
  - libuuid=1.0.3=h1bed415_2
  - libxcb=1.14=h7b6447c_0
  - libxml2=2.9.10=he19cac6_1
  - llvmlite=0.34.0=py37h5202443_2
  - matplotlib=3.2.2=0
  - matplotlib-base=3.2.2=py37hef1b27d_0
  - mkl=2019.4=243
  - mkl-service=2.3.0=py37he904b0f_0
  - mkl_fft=1.1.0=py37h23d657b_0
  - mkl_random=1.1.0=py37hd6b4f25_0
  - ncurses=6.1=he6710b0_1
  - numba=0.51.2=py37h9fdb41a_0
  - numpy=1.18.5=py37ha1c710e_0
  - numpy-base=1.18.5=py37hde5b4d6_0
  - openssl=1.0.2u=h516909a_0
  - pcre=8.44=he6710b0_0
  - pip=20.1.1=py37_1
  - pyparsing=2.4.7=py_0
  - pyqt=5.9.2=py37h22d08a2_1
  - python=3.7.0=h6e4f718_3
  - python-dateutil=2.8.1=py_0
  - python_abi=3.7=1_cp37m
  - qt=5.9.6=h8703b6f_2
  - readline=7.0=h7b6447c_5
  - samtools=1.9=h10a08f8_12
  - scikit-learn=0.23.2=py37h0573a6f_0
  - scipy=1.5.2=py37h0b6359f_0
  - setuptools=47.3.1=py37_0
  - sip=4.19.23=py37he6710b0_0
  - six=1.15.0=py_0
  - sqlite=3.31.1=h7b6447c_0
  - star=2.7.5a=0
  - tbb=2020.2=hc9558a2_0
  - threadpoolctl=2.1.0=pyh5ca1d4c_0
  - tk=8.6.10=hbc83047_0
  - tornado=6.0.4=py37h7b6447c_1
  - umap-learn=0.4.6=py37hc8dfbb8_0
  - velvet=1.2.10=h470a237_2
  - wheel=0.34.2=py37_0
  - xz=5.2.5=h7b6447c_0
  - zlib=1.2.11=h7b6447c_3
prefix: /projects/bgmp/mchang3/miniconda3/envs/bgmp_py37



10/29/20:

Uploading full data (from BOTH lanes) to Talapas;
md5sums from Max Hills:

e4fcff412deacd6c442903e47afa0540  L35291_I1.fastq.gz
05edfe7f644840fa80eb54797bbf2d8b  L35291_R1.fastq.gz
f24ca485b8ef6dce6aeed907a532b180  L35291_R2.fastq.gz

md5sum L35291_I1.fastq.gz 
e4fcff412deacd6c442903e47afa0540  L35291_I1.fastq.gz

md5sum L35291_R1.fastq.gz 
05edfe7f644840fa80eb54797bbf2d8b  L35291_R1.fastq.gz

md5sum L35291_R2.fastq.gz 
f24ca485b8ef6dce6aeed907a532b180  L35291_R2.fastq.gz


re-named files to L35291_S1_001_R2_001.fastq.gz  L35291_S1_L001_R1_001.fastq.gz  L35291_index.fq.gz


zcat L35291_S1_L001_R1_001.fastq.gz | sed '2~4s/[ATCGN]$//' | sed '4~4s/[!-J]$//' > L35291_Trimmed_S1_L001_R1_001.fastq
Slurm Script to trim R1 full file:
            #!/bin/bash
            #SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
            #SBATCH --cpus-per-task=1       ### Number of tasks to be launched
            #SBATCH --account=bgmp          ### Account used for job submission

            zcat L35291_S1_L001_R1_001.fastq.gz | sed '2~4s/[ATCGN]$//' | sed '4~4s/[!-J]$//' > L35291_Trimmed_S1_L001_R1_001.fastq

            gzip L35291_Trimmed_S1_L001_R1_001.fastq

Slurm Script for Cell Ranger on Full Files:

            #!/bin/bash
            #SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
            #SBATCH --cpus-per-task=1       ### Number of tasks to be launched
            #SBATCH --account=bgmp          ### Account used for job submission
            #SBATCH --mem=64G
            #SBATCH --cpus-per-task=8
            #SBATCH --job-name=cellranger_fullcount_%j


            /usr/bin/time -v bin/cellranger count \
            --id FullCounts \
            -f /projects/bgmp/shared/groups/2020/neuron_nerds/full_data/TrimmedFull \
            -s L35291_Trimmed \
            --transcriptome refdata-gex-mm10-2020-A \
            --localcores=8 \
            --localmem=64


Job Output from Cell Ranger on Full Files:
        Command being timed: "bin/cellranger count --id FullCounts -f /projects/bgmp/shared/groups/2020/neuron_nerds/full_data/TrimmedFull -s L35291_Trimmed --transcriptome refdata-gex-mm10-2020-A --localcores=8 
        --localmem=64"
        User time (seconds): 43530.65
        System time (seconds): 1074.34
        Percent of CPU this job got: 261%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 4:44:45
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 13435572
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 86741412
        Voluntary context switches: 31890653
        Involuntary context switches: 12249188
        Swaps: 0
        File system inputs: 0
        File system outputs: 8
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

Running Seurat Script on Talapas GUI:
Hours = 3
Mem = 40
Cores = 4



Monocle3 Vs Slingshot:

Monocle3: currently still in beta version BUT excellent vignettes, beta version has been out a while. Takes an RDS file straight from Seurat (huge plus)

Slingshot: finalized version. 

To install Monocle3:

1) 'conda deactivate' a bunch of times
2) create a new conda env and name it
3) activate that new env
4) conda install -c conda-forge r-base
5) 'which R' to check that it's using the R in your miniconda and environment that you just created
6) 'R' to see that you've got 4.0.3
7) ctrl-d to get out of R
8) conda install -c bioconda r-monocle3
       #^ takes a LONG time, so don't close your terminal, or let your computer fall asleep, or anything like that. You'll have to tell it 'a' for all at some point after it figures out what R packages monocle needs
9) 'R' to open up R again
12) 'library(monocle3)'
13) exit R and module load rstudio
14) make sure rstudio says you're in R 4.0.3
15) 'library(monocle3)' and hopefully you're good to go!

                IGNORE ALL PAST THIS POINT:: FAILED MONOCLE3 INSTALLS
                        conda create --name Monocle3
                                conda activate Monocle3
                                conda install -c conda-forge r-base=4.0.3

                                To install Homebrew
                                        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

                                        test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
                                        test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
                                        test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile
                                        echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile

                                To install sf:
                                        To install gdal:
                                                conda install -c conda-forge gdal
                                                
                                                brew install pkg-config
                                                brew install gdal
                                                
                                                install.packages("rgdal",dependencies=TRUE)

Recommendation: Monocle3 -- takes RDS object from Seurat. Can be installed using R/4.0.3

Velocyto:
        Appears that it can only be used on 10x data IF analyzing some pre-sliced mRNA: need categories “spliced”, “unspliced” or “ambiguous” from cellranger output.
        WE DO HAVE INTRONS! According to Websummary provided by Yu lab: 17.7% reads confidently mapped to intronic regions, 71.3% reads confidently mapped to exonic regions.
        Likely due to presence of pre-spliced mRNA.

        First run on 12/20: Standard options used. Command = 
                velocyto run10x projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/cellranger-4.0.0/FullCounts/ /projects/bgmp/shared/groups/2020/neuron_nerds/refdata-gex-mm10-2020-A/genes/genes.gtf
        Run failed: samtools not version > 1.6
        Updated samtools, re-running command.
                velocyto run10x projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/cellranger-4.0.0/FullCounts/ /projects/bgmp/shared/groups/2020/neuron_nerds/refdata-gex-mm10-2020-A/genes/genes.gtf
        Problem with UTF encoding. Found patch online. Created new environment Velocyto with samtools 1.7. Entered patch into command line:
                        LC_ALL=en_US
                        export LC_ALL

                Re-ran command on commandline on N225: 
                        velocyto run10x /projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/cellranger-4.0.0/FullCounts/ /projects/bgmp/shared/groups/2020/neuron_nerds/refdata-gex-mm10-2020-A/genes/genes.gtf
                Booted off node -- run failed. Re-running as sbatch script:
             
                                #!/usr/bin/bash
                                #SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
                                #SBATCH --job-name=VelocytoRun10x    ### Job Name
                                #SBATCH --output=%jOUT.txt        ### File in which to store job output
                                #SBATCH --error=%jERR.txt         ### File in which to store job error messages
                                #SBATCH --time=1-00:00:00       ### Wall clock time limit in Days-HH:MM:SS
                                #SBATCH --nodes=1               ### Number of nodes needed for the job
                                #SBATCH --ntasks-per-node=1     ### Number of tasks to be launched per Node
                                #SBATCH --account=bgmp          ### Account used for job submission

                                conda activate velocyto
                                cd /projects/bgmp/shared/groups/2020/neuron_nerds/matt/Velocyto
                                
                                LC_ALL=en_US
                                export LC_ALL

                                velocyto run10x /projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/cellranger-4.0.0/FullCounts/ /projects/bgmp/shared/groups/2020/neuron_nerds/refdata-gex-mm10-2020-A/genes/genes.g$

                        Error with Samtools. samtools: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory
                        Found the following patch: conda install -c bioconda samtools=1.9 --force-reinstall
                        Ran the patch in velocyto environment.

                        Re-running bash script with /usr/bin/time -v:

                                        #!/usr/bin/bash
                                        #SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
                                        #SBATCH --job-name=VelocytoRun10x    ### Job Name
                                        #SBATCH --output=OUT_%j.txt        ### File in which to store job output
                                        #SBATCH --error=ERR_%j.txt         ### File in which to store job error messages
                                        #SBATCH --time=1-00:00:00       ### Wall clock time limit in Days-HH:MM:SS
                                        #SBATCH --nodes=1               ### Number of nodes needed for the job
                                        #SBATCH --ntasks-per-node=1     ### Number of tasks to be launched per Node
                                        #SBATCH --account=bgmp          ### Account used for job submission
                                        #SBATCH --mem=40G
                                        #SBATCH --cpus-per-task=4

                                        conda activate velocyto



                                        cd /projects/bgmp/shared/groups/2020/neuron_nerds/matt/Velocyto


                                        LC_ALL=en_US
                                        export LC_ALL


                                        /usr/bin/time -v velocyto run10x /projects/bgmp/shared/groups/2020/neuron_nerds/CellRanger/cellranger-4.0.0/FullCounts/ /projects/bgmp/shared/groups/2020/neuron_nerds/refdata-gex-mm10-2020-A/genes/genes.gtf
                                
                                Important Output:
                                8456947 reads were skipped because no apropiate cell or umi barcode was found

                                It ran successfully! See /projects/bgmp/shared/groups/2020/neuron_nerds/matt/Velocyto/OUT_13867918.txt for details. 
                                Created FullCounts.loom in the /neuron_nerds/CellRanger/cellranger-4.0.0/FullCounts/velocyto/ folder


                        Install velocyto.R:
                                Create new conda environment: velocytoR3
                                conda config --add channels bioconda
                                conda config --add channels conda-forge
                                conda install -c conda-forge r-devtools
                                conda install r-base=4.0.2
                                conda install -c bioconda r-velocyto.r
                                conda install r-biomartr
                                ml R/4.0.2
                                rstudio

                        Convert the tsv to csv:
                        SBATCH:
                                #!/bin/bash
                                #SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
                                #SBATCH --account=bgmp          ### Account used for job submission

                                /usr/bin/time -v zcat features.tsv.gz | sed 's/\t/,/g' > features.csv

                        Following the Jefworks vignette here: https://jef.works/blog/2020/01/14/rna_velocity_analysis_tutorial_tips/
                                Single-cell expression count matrix is an issue:
                                        features.csv doesn't contain total RNA copy numbers similar to dataset S12 from Xia, Fan, Emanuel et al 2019
                                                Neither does matrix.mtx.gz
                                        How to get that matrix:
                                                data in vignette created by MERFISH protocol using scVelo
                                                Can be done by using featureCounts in subread bioconductor package?
                                                        Yes but subread package not meant for single-cell data: https://www.biostars.org/p/468687/
                                                                Needs Salmon package
                                                        Needs scVelo to build matrix
                                        Able to get counts matrix thru Seurat object!
                                                <seurat-object>[["RNA"]]@Counts

                                Troubleshooting vignette:
                                        Mudan library installed thru github
                                        CAIRO library having issues installing
                                                Potential solve: FAILED
                                                        conda install -c anaconda libxt-devel-cos6-x86_64
                                                        conda install -c conda-forge cairo=1.16.0
                                                SOLVE: create same environment on local computer -- run everything on local computer
                                                        Problem:
                                                                Cannot load environment in rstudio
                                HOW TO USE PUTTY:
                                        Open PUTTY
                                        expand SSH tab
                                                click X11 -- enable X11 forwarding
                                        in Session: enter talapas-ln1.uoregon.edu into Host Name

                                        login to Talapas
                                        ssh -X n225
                                                

        NO LONGER DOING RNA VELOCITY: due to too many issues getting all the packages running together
                Instead:
                        Subsetting in Seurat for only mOSNs then re-clustering data
                                Looking at Trp53, Neurod1, and Bcl2 to differentiate early born vs late born cells:
                                        Trp53 and Neurod1 in high abundance indicate early born vs Bcl2 in high abundance indicates late born cells
                                        


scVelo Start:
        Installations:
                conda install -c bioconda scvelo
                conda install -c bioconda r-seurat
                conda install -c bu_cnio r-seuratwrappers
                conda install -c conda-forge r-hdf5r
scVelo2
R version 4.0.3
set DLLpath:
        Sys.setenv(DLLpath="/gpfs/projects/bgmp/mchang3/miniconda3/envs/scVelo/lib/")
        install.packages("Seurat")
        install.packages("Rcpp")


clone bgmp_py37 to scVelo3:
        conda install -c conda-forge r-hdf5r
        remotes::install_github("mojaveazure/seurat-disk")
                Update NO packages (option 3)
        

        conda install -c conda-forge r-rcpp

MESSED SOMETHING UP -- BGMP_PY37 NO LONGER WORKING
Re-made bgmp_py37 from the .yaml file

Removed scVelo 2,3,4 envs

Cloned bgmp_py37 into scVelo2
Seurat library WORKING
Install SeuratDisk:
        conda install -c conda-forge r-hdf5r
        install.packages("remotes")
        .libPaths(c("/projects/bgmp/mchang3/miniconda3/envs/scVelo2/lib/R/library", .libPaths()))
        remove.packages("R6")
        install.packages("scattermore")
        install.packages("R6")
        remove.packages("hdf5r")
        conda install -c conda-forge r-hdf5r
        conda install -c conda-forge openssl
        mv ssl scVelo2/lib/R/library/
        conda remove r-hdf5r
        conda install -c conda-forge r-hdf5r -p /gpfs/projects/bgmp/mchang3/miniconda3/envs/scVelo2
        remove.packages("R6")
        remove.packages("hdf5r")

        remotes::install_github("mojaveazure/seurat-disk")
                Update all packages (option 1)
        AT 1:45 PM 3/2, HIT GITHUB LIMIT: LOCKED OUT UNTIL 10 PM ON 3/2

Install SeuratWrappers:
        conda install -c bu_cnio r-seuratwrappers -p /gpfs/projects/bgmp/mchang3/miniconda3/envs/scVelo2
        library(SeuratWrappers)
                Error: SeuratWrappers installed before R 4.0.0, please re-install it
        conda remove r-seuratwrappers
        conda update r-base
        conda install -c bu_cnio r-seuratwrappers
        library(SeuratWrappers)
                Same error...hmmm


